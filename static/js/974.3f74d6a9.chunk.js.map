{"version":3,"file":"static/js/974.3f74d6a9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","reduxFiles/cont/selectors.js","components/ContactForm/ContactForm.js","components/contactItem/ContactItemStyled.js","components/contactItem/ContactItem.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","page/YourContacts/YourContactStyled.js","page/YourContacts/YourContacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  \n  margin-bottom: 40px;\n  \n \n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FieldGroup = styled.label`\n  display: flex;\n  \n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n  height: 70px;\n  margin-bottom: 20px;\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px;\n`;\nexport const FieldStyled = styled(Field)`\n  width: 250px;\n font-size: 16px;\n  padding: ${p => p.theme.padding.small};\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const Button = styled.button`\nmargin: 0 auto;\n  width: 90px; \n  font-weight: 500;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.2);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:active {\n    color:red;\n    background-color: lightgray; \n    box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.5);}\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.cont.contacts;\n\nexport const selectFilter = state => state.filt.filter;\n\nexport const selectIsLoading = state => state.cont.isLoading;\n\nexport const selectError = state => state.cont.error;\n\nexport const selectSearchedContacts = createSelector(\n  [selectContact, selectFilter],\n  (storeContacts, searchedContact) => {\n    return storeContacts.filter(contact => {\n      const fitContact = contact.name\n        .toLowerCase()\n        .includes(searchedContact.toLowerCase());\n      return fitContact;\n    });\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n} from './ContactFormStyled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'reduxFiles/cont/operators';\nimport Notiflix from 'notiflix';\nimport { selectContact } from 'reduxFiles/cont/selectors';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[A-Z][a-z]{1,} [A-Z][a-z]{1,}$/,\n      'Insert Name and Surname please'\n    )\n    .required('Required'),\n  number: Yup.string()\n    .matches(/^\\d{7}$/, 'Please enter 7 digits')\n\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatchContact = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const onAdd = (newContact, actions) => {\n    const contactExist = contacts.some(\n      contact => contact.name === newContact.name\n    );\n\n    if (contactExist) {\n      Notiflix.Notify.failure(\n        ` ${newContact.name} is already in the phonebook`\n      );\n    } else {\n      dispatchContact(addContact(newContact));\n      actions.resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactSchema}\n      onSubmit={onAdd}\n    >\n      <FormStyled>\n        <FieldGroup>\n          Name\n          <FieldStyled name=\"name\" type=\"string\" placeholder=\"John Smith\" />\n          <ErrorMessageStyled name=\"name\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          Phone Number\n          <FieldStyled name=\"number\" type=\"string\" placeholder=\"1234567\" />\n          <ErrorMessageStyled name=\"number\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Add Contact</Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import styled,{keyframes} from 'styled-components';\nexport const PhoneNoItem = styled.div`\n  display: flex;\n\n  justify-content: space-between;\n`;\n\nexport const ContactText = styled.p`\n  animation: ${keyframes`\n  100% {\n      transform: translateX(0);\n      opacity: 1;\n    }\n    0% {\n      transform: translateX(-100%);\n      opacity: 0;\n    }\n    \n  `} 1s ease-out; /* Adjust the duration and easing as needed */\n  animation-fill-mode: both;\n`;\n\n\n\nexport const DeleteButton = styled.button`\n  background-color: transparent;\n\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    transform: rotate(180deg);\n    transition: transform 0.5s ease;\n  }\n`;\n\nexport const IconWrapper = styled.span`\n  color: red;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ContactText, DeleteButton, IconWrapper, PhoneNoItem } from './ContactItemStyled';\nimport { deleteContact } from 'reduxFiles/cont/operators';\nimport { FiX } from \"react-icons/fi\";\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number } = contact;\n\n  const dispatch = useDispatch();\n\n  const fNumber = formatPhoneNumber(number);\n\n  function formatPhoneNumber() {\n    const num = number.toString();\n  \n    const formattedNo =\n      num.slice(0, 3) +\n      '-' +\n      num.slice(3, 5) +\n      '-' +\n      num.slice(5, num.length );\n    const formattedNumber = formattedNo;\n  \n    return formattedNumber;}\n   \n\n  return (\n    <PhoneNoItem>\n      <ContactText>\n        {name}: {fNumber}\n      </ContactText>\n      <DeleteButton onClick={() => dispatch(deleteContact(contact.id))}>\n      <IconWrapper>\n\n       <FiX size=\"25\" />\n      </IconWrapper>\n      </DeleteButton>\n    </PhoneNoItem>\n  );\n};\n","import styled from 'styled-components';\nexport const PhoneNoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: ${p => p.theme.gap.big};\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../contactItem/ContactItem';\nimport { PhoneNoList } from './ContactListStyled';\nimport { selectSearchedContacts } from 'reduxFiles/cont/selectors';\n\nexport const ContactList = () => {\n  const actualContacts = useSelector(selectSearchedContacts);\n\n  return (\n    <PhoneNoList>\n      {actualContacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <ContactItem contact={contact} />\n          </li>\n        );\n      })}\n    </PhoneNoList>\n  );\n};\n","import styled from 'styled-components';\nexport const FilterStyled = styled.input`\n  width: 250px;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n\n  font-size: 16px;\n  padding: ${p => p.theme.padding.small};\n  margin-bottom: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterStyled } from './FilterStyled';\nimport { filtering } from 'reduxFiles/cont/FilterSlice';\nimport { selectFilter } from 'reduxFiles/cont/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <FilterStyled\n      type=\"text\"\n      value={filter}\n      onChange={evt => dispatch(filtering(evt.target.value))}\n    />\n  );\n};","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  max-width: 1020px;\n  height: 500px;\n  margin: 0 auto;\n  padding: 0 16px 40px 16px;\n  display: flex;\n  justify-content: space-between; \n`;\n\nexport const Header = styled.h2`\n\n  margin-bottom:  20px ;\n\n`;\n\nexport const InputContainer = styled.div`\nfont-size: 16px;\nmin-width: 350px;\n  width: 100%; \n  padding: 30px;\n  display: inline-block;\n  overflow: hidden;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: 2px 25px 25px 2px;;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const DataContainer = styled.div`\nmin-width: 350px;\n\nfont-size: 16px;\n  width: 100%; \n  padding: 30px;\n  display: inline-block;\n  overflow: hidden;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius:  25px 2px 2px 25px ;\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const DataFrame = styled.div`\n\n  overflow-y: auto;\n  height: 350px;\n  border: none;\n\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { GlobalStyle } from 'components/GlobalStyle';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectContact,\n  selectError,\n  selectIsLoading,\n  selectSearchedContacts,\n\n} from 'reduxFiles/cont/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'reduxFiles/cont/operators';\nimport { Helmet } from 'react-helmet';\nimport {\n  ContactsContainer,\n  DataContainer,\n  DataFrame,\n  Header,\n  InputContainer,\n} from './YourContactStyled';\n\nexport default function Contacts() {\n  const actualContacts = useSelector(selectSearchedContacts);\n  const allContacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n      }}\n    >\n      <div>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        <h1\n          style={{\n            textAlign: ' center',\n            marginBottom: 20,\n          }}\n        >\n          Phonebook\n        </h1>\n        <ContactsContainer>\n          <InputContainer>\n          <Header>Add Contact</Header>\n            <ContactForm />\n\n            {isLoading && !error && <b>Request in progress...</b>}\n\n            {allContacts.length > 0 && (\n              <div>\n                <Header>Find contacts by name</Header>\n                <Filter />\n              </div>\n            )}\n          </InputContainer>\n          <DataContainer>\n            <Header>Contacts</Header>\n            {actualContacts.length > 0 && (\n              <DataFrame>\n                <ContactList />\n              </DataFrame>\n            )}\n          </DataContainer>\n        </ContactsContainer>\n      </div>\n      <GlobalStyle />\n    </div>\n  );\n}\n"],"names":["FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","FieldGroup","_templateObject2","p","theme","gap","small","ErrorMessageStyled","ErrorMessage","_templateObject3","FieldStyled","Field","_templateObject4","padding","colors","borderGray","borderRad","Button","_templateObject5","selectContact","state","cont","contacts","selectFilter","filt","filter","selectIsLoading","isLoading","selectError","error","selectSearchedContacts","createSelector","storeContacts","searchedContact","contact","name","toLowerCase","includes","contactSchema","Yup","shape","matches","required","number","ContactForm","dispatchContact","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","newContact","actions","some","Notiflix","concat","addContact","resetForm","children","_jsxs","type","placeholder","component","PhoneNoItem","ContactText","keyframes","DeleteButton","IconWrapper","ContactItem","_ref","dispatch","fNumber","num","toString","slice","length","formatPhoneNumber","onClick","deleteContact","id","FiX","size","PhoneNoList","big","ContactList","actualContacts","map","FilterStyled","Filter","value","onChange","evt","filtering","target","ContactsContainer","Header","InputContainer","DataContainer","DataFrame","Contacts","allContacts","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","Helmet","textAlign","marginBottom","GlobalStyle"],"sourceRoot":""}